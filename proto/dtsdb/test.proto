syntax = "proto2";

package dtsdb;

import "dtsdb/schema.proto";

message Simple {
    option (dtsdb.table).name = "Simple";
    required string id = 1 [(dtsdb.field).is_id = true];
    optional string opt_string = 2 [(dtsdb.field).merge = "latest"];
    required bool req_bool = 3;
}

message Nested {
    option (dtsdb.table).name = "Nested";
    message Inner {
        optional string f1 = 1;
        required int32 f2 = 2;
    }

    required string id = 1 [(dtsdb.field).is_id = true];

    enum Selection {
        HELLO = 0;
        WORLD = 1;
    }
    optional Selection selection = 2;

    optional Inner inner = 3;
}

message NoTableName {
    required string id = 1 [(dtsdb.field).is_id = true];
}

message NoId {
    option (dtsdb.table).name = "NoId";
}

message MergeTest {
    option (dtsdb.table).name = "MergeTest";
    required string id = 1 [(dtsdb.field).is_id = true];
    optional string s_error = 2 [(dtsdb.field).merge = "error"];
    optional string s_latest = 3 [(dtsdb.field).merge = "latest"];
    repeated int32 r_i32_union = 4 [(dtsdb.field).merge = "set_union"];
    repeated int32 r_i32_lunion = 5 [(dtsdb.field).merge = "list_union"];
    map<string, int32> m_union_latest = 6 [(dtsdb.field).merge = "union_latest"];
}
